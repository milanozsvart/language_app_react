{"version":3,"sources":["img/flags sync /^/.*/-flag/.svg$","img/yla-logo.svg","img/flags/english-flag.svg","img/flags/french-flag.svg","img/flags/hungarian-flag.svg","img/flags/norwegian-flag.svg","img/flags/polish-flag.svg","components/Nav.jsx","components/WelcomingMessage.jsx","components/ButtonContainer.jsx","components/LangChooseWelcome.jsx","components/OriginalButtonContainer.jsx","components/LangChooseOriginal.jsx","components/StartLearning.jsx","components/FrontPage.jsx","components/LangContainer.jsx","components/PointsContainer.jsx","components/CardContainer.jsx","components/AgainTarget.jsx","components/AgainOriginal.jsx","components/AgainLang.jsx","components/MainContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Nav","props","className","src","logo","alt","onClick","toggler","WelcomingMessage","incrementer","ButtonContainer","chooseLanguage","ev","preventDefault","targChoose","currentTarget","dataset","array","lang","data-id","LangChooseWelcome","targetLanguage","counter","OriginalButtonContainer","originalBtns","filter","push","origiChoose","LangChooseOriginal","originalLanguage","StartLearning","FrontPage","LangContainer","console","log","require","icon","faExchangeAlt","size","PointsContainer","goodAnswers","allAnswers","CardContainer","useState","inputValue","setInputValue","inputClass","setInputClass","handleInputClass","inpclass","isDisabled","setIsDisabled","answer","setAnswer","words","rand","type","autoComplete","value","onChange","disabled","faArrowCircleRight","handleGoodAnswers","handleAllAnswers","faChevronRight","changeRand","faChevronLeft","AgainTarget","item","selector","selected","AgainOriginal","AgainLang","targSelected","settargSelected","origiSelected","setorigiSelected","toggled","biglanguages","setCounter","MainContainer","polish","hungarian","french","norwegian","english","Math","floor","random","length","setRand","setGoodAnswers","setAllAnswers","languages","originalLangChooser","targetLangChooser","newRand","App","setTarget","setOriginal","setToggled","prev","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75f5826c.chunk.js","sourcesContent":["var map = {\n\t\"./english-flag.svg\": 23,\n\t\"./french-flag.svg\": 24,\n\t\"./hungarian-flag.svg\": 25,\n\t\"./norwegian-flag.svg\": 26,\n\t\"./polish-flag.svg\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8;","module.exports = __webpack_public_path__ + \"static/media/yla-logo.35f645bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/english-flag.ffa68d05.svg\";","module.exports = __webpack_public_path__ + \"static/media/french-flag.549b2c2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/hungarian-flag.f2222739.svg\";","module.exports = __webpack_public_path__ + \"static/media/norwegian-flag.d1bdd1fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/polish-flag.d3d27d6c.svg\";","import React from \"react\";\r\nimport logo from \"../img/yla-logo.svg\";\r\n\r\nconst Nav = (props) => {\r\n  return (\r\n    <nav>\r\n      <div className=\"logo-container\">\r\n        <img src={logo} alt=\"\" />\r\n      </div>\r\n      <div className=\"links-container\">\r\n        <ul>\r\n          <li>\r\n            <button id=\"language-chooser\" onClick={props.toggler}>\r\n              Languages\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nconst WelcomingMessage = (props) => {\r\n  const incrementer = () => {\r\n    props.incrementer();\r\n  };\r\n  return (\r\n    <div className=\"front-page\">\r\n      <h2>Welcome to Your Language App</h2>\r\n      <div className=\"p-container\">\r\n        <p>\r\n          Expand your vocabulary today with this easy-to-use language learning\r\n          app!\r\n        </p>\r\n        <p>Press the button below to choose language!</p>\r\n      </div>\r\n      <button className=\"front-btn\" onClick={incrementer}>\r\n        Choose language\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomingMessage;\r\n","import React from \"react\";\r\n\r\nconst ButtonContainer = (props) => {\r\n  const chooseLanguage = (ev) => {\r\n    ev.preventDefault();\r\n    props.targChoose(ev.currentTarget.dataset.id);\r\n    props.incrementer();\r\n  };\r\n  return (\r\n    <div className=\"button-container\">\r\n      {props.array.map((lang) => (\r\n        <button className=\"btn target\" data-id={lang} onClick={chooseLanguage}>\r\n          {lang}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonContainer;\r\n","import React from \"react\";\r\nimport ButtonContainer from \"./ButtonContainer\";\r\n\r\nconst LangChooseWelcome = (props) => {\r\n  return (\r\n    <div className=\"front-page\">\r\n      <p className=\"added-text\">\r\n        Firstly, you have to choose which language you would like to learn.\r\n        Choose one language from the options below!\r\n      </p>\r\n      <h3>Which language do you want to learn?</h3>\r\n      <ButtonContainer\r\n        array={props.array}\r\n        targChoose={props.targChoose}\r\n        targetLanguage={props.targetLanguage}\r\n        counter={props.counter}\r\n        incrementer={props.incrementer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LangChooseWelcome;\r\n","import React from \"react\";\r\n\r\nconst OriginalButtonContainer = (props) => {\r\n  let originalBtns = props.array.filter((lang) => {\r\n    return lang !== props.targetLanguage;\r\n  });\r\n  originalBtns.push(\"english\");\r\n  const chooseLanguage = (ev) => {\r\n    ev.preventDefault();\r\n    props.origiChoose(ev.currentTarget.dataset.id);\r\n    props.incrementer();\r\n  };\r\n  return (\r\n    <div className=\"button-container\">\r\n      {originalBtns.map((lang) => (\r\n        <button\r\n          className=\"btn original\"\r\n          data-id={lang}\r\n          onClick={chooseLanguage}\r\n        >\r\n          {lang}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OriginalButtonContainer;\r\n","import React from \"react\";\r\nimport OriginalButtonContainer from \"./OriginalButtonContainer\";\r\n\r\nconst LangChooseOriginal = (props) => {\r\n  return (\r\n    <div className=\"front-page\">\r\n      <h2>\r\n        You chose <span>{props.targetLanguage}</span>!\r\n      </h2>\r\n      <p className=\"guidance-p-tag\">\r\n        Now choose a guidance language that will help you learn. We suggest you\r\n        pick either your native language or a language you know quite well.\r\n      </p>\r\n      <OriginalButtonContainer\r\n        array={props.array}\r\n        counter={props.counter}\r\n        incrementer={props.incrementer}\r\n        origiChoose={props.origiChoose}\r\n        originalLanguage={props.originalLanguage}\r\n        targetLanguage={props.targetLanguage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LangChooseOriginal;\r\n","import React from \"react\";\r\n\r\nconst StartLearning = (props) => {\r\n  const incrementer = (ev) => {\r\n    ev.preventDefault();\r\n    props.incrementer();\r\n  };\r\n  return (\r\n    <div className=\"front-page\">\r\n      <h2>Let's get started!</h2>\r\n      <div>\r\n        <h4>\r\n          You are going to be learning <span>{props.targetLanguage}</span> and\r\n          your guidance language will be in{\" \"}\r\n          <span>{props.originalLanguage}</span>\r\n        </h4>\r\n      </div>\r\n      <button className=\"btn\" id=\"long-btn\" onClick={incrementer}>\r\n        To the flashcards!\r\n      </button>\r\n      <p className=\"p-container\" id=\"margin-bottom\">\r\n        You can always modify your choice of languages in our menu on the top of\r\n        the page\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartLearning;\r\n","import React from \"react\";\r\nimport WelcomingMessage from \"./WelcomingMessage\";\r\nimport LangChooseWelcome from \"./LangChooseWelcome\";\r\nimport LangChooseOriginal from \"./LangChooseOriginal\";\r\nimport StartLearning from \"./StartLearning\";\r\n\r\nconst FrontPage = (props) => {\r\n  if (props.counter === 0) {\r\n    return (\r\n      <WelcomingMessage\r\n        counter={props.counter}\r\n        incrementer={props.incrementer}\r\n      />\r\n    );\r\n  } else if (props.counter === 1) {\r\n    return (\r\n      <LangChooseWelcome\r\n        array={props.array}\r\n        targChoose={props.targChoose}\r\n        targetLanguage={props.targetLanguage}\r\n        counter={props.counter}\r\n        incrementer={props.incrementer}\r\n      />\r\n    );\r\n  } else if (props.counter === 2) {\r\n    return (\r\n      <LangChooseOriginal\r\n        array={props.array}\r\n        originalLanguage={props.originalLanguage}\r\n        origiChoose={props.origiChoose}\r\n        counter={props.counter}\r\n        incrementer={props.incrementer}\r\n        targetLanguage={props.targetLanguage}\r\n      />\r\n    );\r\n  } else if (props.counter === 3) {\r\n    return (\r\n      <StartLearning\r\n        originalLanguage={props.originalLanguage}\r\n        counter={props.counter}\r\n        incrementer={props.incrementer}\r\n        targetLanguage={props.targetLanguage}\r\n      />\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default FrontPage;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst LangContainer = (props) => {\r\n  console.log(props.targetLanguage);\r\n  console.log(props.counter);\r\n  if (props.counter === 4) {\r\n    return (\r\n      <div className=\"lang-container\">\r\n        <span className=\"guidance\">\r\n          <img\r\n            src={require(`../img/flags/${props.originalLanguage}-flag.svg`)}\r\n            alt=\"hh\"\r\n          ></img>\r\n        </span>\r\n        <FontAwesomeIcon icon={faExchangeAlt} size=\"2x\" className=\"reverse\" />\r\n        <span className=\"target\">\r\n          <img\r\n            src={require(`../img/flags/${props.targetLanguage}-flag.svg`)}\r\n            alt=\"hh\"\r\n          ></img>\r\n        </span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default LangContainer;\r\n","import React from \"react\";\r\n\r\nconst PointsContainer = (props) => {\r\n  if (props.counter === 4) {\r\n    return (\r\n      <div className=\"points-container\">\r\n        <span className=\"points\">{props.goodAnswers}</span>\r\n        <span className=\"per\">/ </span>\r\n        <span className=\"total-points\">{props.allAnswers}</span>\r\n      </div>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default PointsContainer;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CardContainer = (props) => {\r\n  //Getting the user input into the state\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputValue = (e) => {\r\n    setInputValue(e.currentTarget.value);\r\n  };\r\n  //Setting the class field of input regarding the answer is good or bad\r\n  const [inputClass, setInputClass] = useState(\"input-area\");\r\n  const handleInputClass = (inpclass) => {\r\n    setInputClass(inpclass);\r\n  };\r\n  //Disabling input area and submit button after hitting submit button\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  //Setting up the scenario of good and bad answers\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const submitAnswer = () => {\r\n    if (inputValue === props.words[props.rand][props.originalLanguage]) {\r\n      handleInputClass(\"input-area good\");\r\n      setAnswer(\"OK!\");\r\n      props.handleGoodAnswers();\r\n    } else {\r\n      handleInputClass(\"input-area bad\");\r\n      setAnswer(props.words[props.rand][props.originalLanguage]);\r\n    }\r\n    setIsDisabled(true);\r\n    props.handleAllAnswers();\r\n  };\r\n  const nextQuestion = () => {\r\n    handleInputClass(\"input-area\");\r\n    setAnswer(\"\");\r\n    setIsDisabled(false);\r\n    setInputValue(\"\");\r\n    props.changeRand();\r\n    if (inputValue === \"\") {\r\n      props.handleAllAnswers();\r\n    }\r\n  };\r\n  if (props.counter === 4) {\r\n    return (\r\n      <div className=\"card-container\">\r\n        <span className=\"asking\">\r\n          {props.words[props.rand][props.targetLanguage]}\r\n        </span>\r\n        <span className=\"answer\">{answer}</span>\r\n        <div className=\"container\">\r\n          <input\r\n            type=\"text\"\r\n            className={inputClass}\r\n            id=\"input\"\r\n            autoComplete=\"off\"\r\n            value={inputValue}\r\n            onChange={handleInputValue}\r\n            disabled={isDisabled}\r\n          />\r\n          <FontAwesomeIcon\r\n            icon={faArrowCircleRight}\r\n            size=\"2x\"\r\n            className=\"submit\"\r\n            onClick={submitAnswer}\r\n          />\r\n        </div>\r\n        <FontAwesomeIcon\r\n          icon={faChevronRight}\r\n          size=\"2x\"\r\n          className=\"right\"\r\n          onClick={nextQuestion}\r\n        />\r\n        <FontAwesomeIcon icon={faChevronLeft} size=\"2x\" className=\"left\" />\r\n      </div>\r\n    );\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default CardContainer;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst AgainTarget = (props) => {\r\n  return (\r\n    <div>\r\n      <span className=\"span\">I want to learn...</span>\r\n      <div id=\"selectTarget\">\r\n        {props.array.map((item) => {\r\n          return (\r\n            <button\r\n              id={item}\r\n              onClick={props.selector}\r\n              className={\r\n                props.selected === item\r\n                  ? \"right-lang target selected\"\r\n                  : \"right-lang target\"\r\n              }\r\n            >\r\n              {item}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgainTarget;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AgainOriginal = (props) => {\r\n  return (\r\n    <div>\r\n      <span className=\"span\">I speak...</span>\r\n      <div id=\"selectOriginal\">\r\n        {props.array.map((item) => {\r\n          return (\r\n            <button\r\n              className={\r\n                props.selected === item\r\n                  ? \"right-lang original selected\"\r\n                  : \"right-lang original\"\r\n              }\r\n              id={item}\r\n              onClick={props.selector}\r\n            >\r\n              {item}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgainOriginal;\r\n","import React, { useState } from \"react\";\r\nimport AgainTarget from \"./AgainTarget\";\r\nimport AgainOriginal from \"./AgainOriginal\";\r\n\r\nconst AgainLang = (props) => {\r\n  const [targSelected, settargSelected] = useState(\"\");\r\n  const targSelector = (e) => {\r\n    settargSelected(e.currentTarget.id);\r\n  };\r\n  const [origiSelected, setorigiSelected] = useState(\"\");\r\n  const origiSelector = (e) => {\r\n    setorigiSelected(e.currentTarget.id);\r\n  };\r\n  const startLearning = () => {\r\n    props.origiChoose(origiSelected);\r\n    props.targChoose(targSelected);\r\n    if (props.counter < 4) {\r\n      props.setCounter(4);\r\n    }\r\n    props.toggler();\r\n  };\r\n  return (\r\n    <div className={props.toggled ? \"again-lang\" : \"again-lang again-visible\"}>\r\n      <div className=\"lang-align\">\r\n        <AgainTarget\r\n          array={props.biglanguages}\r\n          targetLanguage={props.targetLanguage}\r\n          targChoose={props.targChoose}\r\n          selected={targSelected}\r\n          selector={targSelector}\r\n        />\r\n        <AgainOriginal\r\n          array={props.biglanguages}\r\n          originalLanguage={props.originalLanguage}\r\n          origiChoose={props.origiChoose}\r\n          selected={origiSelected}\r\n          selector={origiSelector}\r\n        />\r\n      </div>\r\n      <button id=\"start\" onClick={startLearning}>\r\n        Start\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgainLang;\r\n","import React, { useState } from \"react\";\r\nimport FrontPage from \"./FrontPage\";\r\nimport LangContainer from \"./LangContainer\";\r\nimport PointsContainer from \"./PointsContainer\";\r\nimport CardContainer from \"./CardContainer\";\r\nimport AgainLang from \"./AgainLang\";\r\n\r\nconst MainContainer = (props) => {\r\n  const words = [\r\n    {\r\n      id: 1,\r\n      polish: \"kot\",\r\n      hungarian: \"a macska\",\r\n      french: \"le chat\",\r\n      norwegian: \"katten\",\r\n      english: \"the cat\",\r\n    },\r\n    {\r\n      id: 2,\r\n      polish: \"pies\",\r\n      hungarian: \"a kutya\",\r\n      french: \"le chien\",\r\n      norwegian: \"hunden\",\r\n      english: \"the dog\",\r\n    },\r\n    {\r\n      id: 3,\r\n      polish: \"samochód\",\r\n      hungarian: \"az autó\",\r\n      french: \"la voiture\",\r\n      norwegian: \"bilen\",\r\n      english: \"the car\",\r\n    },\r\n  ];\r\n\r\n  const [counter, setCounter] = useState(0);\r\n  const incrementer = () => {\r\n    setCounter(counter + 1);\r\n  };\r\n  const [rand, setRand] = useState(Math.floor(Math.random() * words.length));\r\n  const changeRand = () => {\r\n    let newRand = Math.floor(Math.random() * words.length);\r\n    while (newRand === rand) {\r\n      newRand = Math.floor(Math.random() * words.length);\r\n    }\r\n    if (newRand !== rand) {\r\n      setRand(newRand);\r\n    }\r\n  };\r\n  const [goodAnswers, setGoodAnswers] = useState(0);\r\n  const [allAnswers, setAllAnswers] = useState(0);\r\n  const handleGoodAnswers = () => {\r\n    setGoodAnswers(goodAnswers + 1);\r\n  };\r\n  const handleAllAnswers = () => {\r\n    setAllAnswers(allAnswers + 1);\r\n  };\r\n  return (\r\n    <div className=\"main-container\">\r\n      <FrontPage\r\n        counter={counter}\r\n        incrementer={incrementer}\r\n        array={props.languages}\r\n        origiChoose={props.originalLangChooser}\r\n        targChoose={props.targetLangChooser}\r\n        targetLanguage={props.targetLanguage}\r\n        originalLanguage={props.originalLanguage}\r\n      />\r\n      <LangContainer\r\n        targetLanguage={props.targetLanguage}\r\n        origiChoose={props.originalLangChooser}\r\n        targChoose={props.targetLangChooser}\r\n        originalLanguage={props.originalLanguage}\r\n        counter={counter}\r\n        incrementer={incrementer}\r\n      />\r\n      <PointsContainer\r\n        counter={counter}\r\n        incrementer={incrementer}\r\n        goodAnswers={goodAnswers}\r\n        allAnswers={allAnswers}\r\n        handleGoodAnswers={handleGoodAnswers}\r\n        handleAllAnswers={handleAllAnswers}\r\n      />\r\n      <CardContainer\r\n        targetLanguage={props.targetLanguage}\r\n        originalLanguage={props.originalLanguage}\r\n        counter={counter}\r\n        incrementer={incrementer}\r\n        words={words}\r\n        rand={rand}\r\n        changeRand={changeRand}\r\n        handleGoodAnswers={handleGoodAnswers}\r\n        handleAllAnswers={handleAllAnswers}\r\n      />\r\n      <AgainLang\r\n        targetLanguage={props.targetLanguage}\r\n        originalLanguage={props.originalLanguage}\r\n        origiChoose={props.originalLangChooser}\r\n        targChoose={props.targetLangChooser}\r\n        array={props.languages}\r\n        toggled={props.toggled}\r\n        biglanguages={props.biglanguages}\r\n        counter={counter}\r\n        incrementer={incrementer}\r\n        setCounter={setCounter}\r\n        toggler={props.toggler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React, { useState } from \"react\";\nimport \"./styles/styles.css\";\nimport Nav from \"./components/Nav\";\nimport MainContainer from \"./components/MainContainer\";\n\nconst App = (props) => {\n  const languages = [\"norwegian\", \"polish\", \"french\", \"hungarian\"];\n  const biglanguages = [\n    \"norwegian\",\n    \"polish\",\n    \"french\",\n    \"hungarian\",\n    \"english\",\n  ];\n  const [targetLanguage, setTarget] = useState(\"\");\n  const [originalLanguage, setOriginal] = useState(\"\");\n  const targetLangChooser = (lang) => {\n    setTarget(lang);\n  };\n  const originalLangChooser = (lang) => {\n    setOriginal(lang);\n  };\n  const [toggled, setToggled] = useState(\"false\");\n  const toggler = () => {\n    setToggled((prev) => !prev);\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <Nav toggler={toggler} />\n      </header>\n      <main>\n        <MainContainer\n          toggled={toggled}\n          toggler={toggler}\n          languages={languages}\n          biglanguages={biglanguages}\n          targetLanguage={targetLanguage}\n          originalLanguage={originalLanguage}\n          targetLangChooser={targetLangChooser}\n          originalLangChooser={originalLangChooser}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}